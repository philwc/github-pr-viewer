{"version":3,"sources":["storage.js","AppNavbar.js","Github/PRTable.js","Github/GithubCard.js","Github/GithubRepoList.js","Octokit.js","Github/Auth.js","Github/Repos.js","App.js","registerServiceWorker.js","index.js"],"names":["local","storageFactory","localStorage","AppNavbar","sessionStorage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","collapse","onClick","bind","assertThisInitialized","setState","authLink","storage","getItem","react_default","a","createElement","mdbreact","to","style","backgroundColor","dark","expand","scrolling","fixed","href","isOpen","navbar","left","right","React","Component","PRTable","toggle","btnText","pulls","tableRows","map","pull","updated","moment","updated_at","fromNow","updated_abs","format","key","id","color","html_url","target","rel","number","title","src","user","avatar_url","width","className","alt","login","index_es","icon","faChevronUp","faChevronDown","length","size","GithubCard","error","pullsLoaded","repoLoaded","repo","octokit","auth","loadData","intervalId","setInterval","message","clearInterval","_this2","pullRequests","getAll","owner","name","then","result","data","repos","get","removeRepoCallback","_this$state","text","faSpinner","faGithub","removeRepo","faTimes","Github_PRTable","GithubRepoList","newRepos","JSON","parse","filter","r","setItem","stringify","repositories","out","repositoryCards","repository","index","Github_GithubCard","Link","Octokit","GITHUB_TOKEN","authenticate","type","token","Auth","savedToken","redirect","e","preventDefault","authCallback","removeItem","value","authCard","onChange","handleChange","label","saveToken","removeAuthCard","removeToken","redirectDo","Redirect","Repos","loaded","storedRepos","sort","per_page","forEach","selected","find","push","checked","parseInt","indexOf","fill","_this3","addRepo","App","src_AppNavbar","Switch","Route","path","render","Github_Repos","assign","Github_Auth","Github_GithubRepoList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3837b268.chunk.js","sourcesContent":["import { storageFactory } from 'storage-factory';\n\nexport const local = storageFactory(localStorage);\nexport const session = storageFactory(sessionStorage);","import React from 'react';\nimport { Navbar, NavbarBrand, NavbarNav, NavbarToggler, Collapse, NavItem, NavLink } from 'mdbreact';\nimport * as storage from './storage';\n\nclass AppNavbar extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick () {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  render () {\n    const bgPink = {backgroundColor: '#ec407a'};\n\n    let authLink;\n    if (storage.local.getItem('githubToken') === null) {\n      authLink = <NavLink to=\"/auth\">Add Access Token</NavLink>;\n    } else {\n      authLink = <NavLink to=\"/auth\">Remove Access Token</NavLink>;\n    }\n\n    return (\n      <Navbar style={bgPink} dark expand=\"md\" scrolling fixed=\"top\">\n        <NavbarBrand href=\"\">\n          <strong>Github PR Viewer</strong>\n        </NavbarBrand>\n        <NavbarToggler onClick={this.onClick}/>\n        <Collapse isOpen={this.state.collapse} navbar>\n          <NavbarNav left>\n            <NavItem>\n              <NavLink to=\"/repos\">Select Repositories</NavLink>\n            </NavItem>\n          </NavbarNav>\n          <NavbarNav right>\n            <NavItem>{authLink}</NavItem>\n          </NavbarNav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default AppNavbar;","import React from 'react';\nimport { Table, TableBody, TableHead, Button, Collapse } from 'mdbreact';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\nclass PRTable extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggle () {\n    this.setState({collapse: !this.state.collapse});\n  }\n\n  render () {\n    let pulls = this.props.pulls;\n    const tableRows = pulls.map((pull) => {\n      let updated = moment(pull.updated_at).fromNow();\n      let updated_abs = moment(pull.updated_at).format('dddd, MMMM Do YYYY, h:mm:ss a');\n\n      return <tr key={pull.id}>\n        <td>\n          <a color='primary' href={pull.html_url} target='_blank' rel=\"noopener noreferrer\">#{pull.number} - {pull.title}</a>\n        </td>\n        <td>\n          <img src={pull.user.avatar_url} style={{width: '25px'}}\n               className=\"rounded-circle mr-3\" alt=\"{pull.user.login}\"/>\n          <span>{pull.user.login}</span>\n        </td>\n        <td title={updated_abs}>\n          {updated}\n        </td>\n      </tr>;\n    });\n\n    let btnText;\n    if (this.state.collapse) {\n      btnText = <span><FontAwesomeIcon icon={faChevronUp}/> Hide</span>;\n    } else {\n      btnText = <span><FontAwesomeIcon icon={faChevronDown}/> Show ({pulls.length})</span>;\n    }\n\n    let out;\n\n    if (pulls.length > 0) {\n      out = <div>\n        <Button size=\"sm\" color=\"primary\" onClick={this.toggle}>{btnText}</Button>\n\n        <Collapse isOpen={this.state.collapse}>\n          <Table>\n            <TableHead>\n              <tr>\n                <th>Title</th>\n                <th>Author</th>\n                <th>Updated</th>\n              </tr>\n            </TableHead>\n            <TableBody>\n              {tableRows}\n            </TableBody>\n          </Table>\n        </Collapse>\n      </div>;\n    } else {\n      out = <p>No Pull Requests Found</p>;\n    }\n\n    return (out);\n  }\n}\n\nexport default PRTable;\n\n","import React from 'react';\nimport { Card, CardBody, CardTitle, CardText, Row, Col, Button } from 'mdbreact';\nimport PRTable from './PRTable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nclass GithubCard extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      error: null,\n      pullsLoaded: false,\n      repoLoaded: false,\n      pulls: [],\n      repo: null\n    };\n  }\n\n  componentDidMount () {\n    if (this.props.octokit && this.props.octokit.auth) {\n      this.loadData();\n      let interval = 60 * 1000 * 10; // Ten Minutes\n      let intervalId = setInterval(this.loadData.bind(this), interval);\n      this.setState({intervalId: intervalId});\n    } else {\n      this.setState({\n        repoLoaded: true,\n        error: {message: 'Not Authenticated'}\n      });\n    }\n  }\n\n  componentWillUnmount () {\n    let intervalId = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  loadData () {\n    this.props.octokit.pullRequests.getAll({owner: this.props.repo.owner, repo: this.props.repo.name})\n      .then(\n        (result) => {\n          this.setState({\n            pullsLoaded: true,\n            pulls: result.data\n          });\n        },\n        (error) => {\n          this.setState({\n            pullsLoaded: true,\n            error: error\n          });\n        }\n      );\n\n    this.props.octokit.repos.get({owner: this.props.repo.owner, repo: this.props.repo.name})\n      .then(\n        (result) => {\n          this.setState({\n            repoLoaded: true,\n            repo: result.data\n          });\n        },\n        (error) => {\n          this.setState({\n            repoLoaded: true,\n            error: error\n          });\n        }\n      );\n  }\n\n  removeRepo () {\n    this.props.removeRepoCallback(this.props.repo);\n  }\n\n  render () {\n    const {error, repoLoaded, pullsLoaded, pulls, repo} = this.state;\n    let text = '';\n    if (error) {\n      text = <CardText>Error: {error.message}</CardText>;\n    } else if (!pullsLoaded && !repoLoaded) {\n      text = <FontAwesomeIcon className=\"fa-pulse\" icon={faSpinner}/>;\n    }\n\n    let title = <span>\n      <FontAwesomeIcon icon={faGithub}/>\n      &nbsp;{this.props.repo.owner}/{this.props.repo.name}\n       </span>;\n    if (repoLoaded && repo) {\n      title = <a className='text-muted' href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {title}\n      </a>;\n    }\n\n    return (\n      <Card>\n        <CardBody>\n          <CardTitle>\n            <Row>\n              <Col className=\"col-11\">\n                {title}\n              </Col>\n              <Col className=\"col-1\">\n                <button className='btn btn-link text-muted m-0 p-0' onClick={this.removeRepo.bind(this)}>\n                  <FontAwesomeIcon icon={faTimes}/>\n                </button>\n              </Col>\n            </Row>\n\n\n          </CardTitle>\n          {text}\n          {pullsLoaded &&\n          <PRTable pulls={pulls}/>}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default GithubCard;","import React from 'react';\nimport GithubCard from './GithubCard';\nimport { Row, Col } from 'mdbreact';\nimport * as storage from '../storage';\nimport { Link } from 'react-router-dom';\n\nclass GithubRepoList extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      repositories: [],\n    };\n  }\n\n  removeRepoCallback = (repo) => {\n\n    let savedRepos = JSON.parse(storage.local.getItem('githubRepos'));\n    let newRepos = savedRepos.filter(r => r.id !== repo.id);\n\n    storage.local.setItem('githubRepos', JSON.stringify(newRepos));\n    this.setState({\n      repositories: newRepos\n    });\n  };\n\n  componentDidMount () {\n    let repos = JSON.parse(storage.local.getItem('githubRepos'));\n    if (repos === null) {\n      repos = [];\n    }\n\n    this.setState({\n      repositories: repos\n    });\n  }\n\n  render () {\n    const {repositories} = this.state;\n\n    let out;\n    if (repositories.length > 0) {\n      const repositoryCards = repositories.map((repository, index) =>\n        <Col className=\"col-4 mt-3\" key={index}>\n          <GithubCard removeRepoCallback={this.removeRepoCallback} octokit={this.props.octokit} repo={repository}/>\n        </Col>\n      );\n      out = <Row>\n        {repositoryCards}\n      </Row>;\n    } else {\n      out = <Row>\n        <Col>\n          <p>No Repositories Configured</p>\n          <p><Link to=\"/repos\">Configure some now!</Link></p>\n        </Col>\n      </Row>;\n    }\n\n    return (out);\n  }\n}\n\nexport default GithubRepoList;","import Octokit from '@octokit/rest';\nimport * as storage from './storage';\n\nexport default {\n  get () {\n    const octokit = new Octokit();\n\n    const GITHUB_TOKEN = storage.local.getItem('githubToken');\n    if (GITHUB_TOKEN !== null) {\n      octokit.authenticate({\n        type: 'token',\n        token: GITHUB_TOKEN\n      });\n      octokit.auth = true;\n    } else {\n      octokit.auth = false;\n    }\n\n    return octokit;\n  }\n};\n\n\n","import React from 'react';\nimport { Card, CardBody, CardTitle, CardText, Input, Button } from 'mdbreact';\nimport * as storage from '../storage';\nimport { Redirect } from 'react-router-dom';\n\nclass Auth extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      token: '',\n      savedToken: storage.local.getItem('githubToken'),\n      redirect: false\n    };\n  }\n\n  saveToken (e) {\n    e.preventDefault();\n    storage.local.setItem('githubToken', this.state.token);\n    this.props.authCallback();\n    this.redirect(e);\n  }\n\n  removeToken (e) {\n    e.preventDefault();\n    storage.local.removeItem('githubToken');\n    this.props.authCallback();\n    this.redirect(e);\n  }\n\n  handleChange (e) {\n    this.setState({token: e.target.value});\n  }\n\n  redirect (e) {\n    e.preventDefault();\n    this.setState({redirect: true});\n  }\n\n  render () {\n\n    const {redirect, savedToken} = this.state;\n\n    let authCard = <Card>\n      <CardBody>\n        <CardTitle>Authentication Required</CardTitle>\n        <CardText>\n          In order to make requests to Github, a personal access token is required.\n          To generate, <a\n          href='https://github.com/settings/tokens/new?scopes=repo&description=Github%20PR%20Viewer'\n          target=\"_blank\" rel=\"noopener noreferrer\">click here</a>. Once generated, copy/paste the token below &\n          click save.\n        </CardText>\n        <Input value={this.state.token} onChange={this.handleChange.bind(this)}\n               label=\"Github Personal Access Token\"/>\n        <Button onClick={this.saveToken.bind(this)} className='pull-right'>Save</Button>\n      </CardBody>\n    </Card>;\n\n    let removeAuthCard = <Card>\n      <CardBody>\n        <CardTitle>Remove Token</CardTitle>\n        <CardText>\n          If you remove your access token, the application will not be able to make requests to Github. Are you sure?\n        </CardText>\n        <Button color='danger' onClick={this.removeToken.bind(this)} className='danger pull-right'>Remove</Button>\n        <Button onClick={this.redirect.bind(this)} className='pull-right'>Cancel</Button>\n      </CardBody>\n    </Card>;\n\n    let redirectDo = <Redirect to=\"/\"/>;\n\n    let out;\n    if (redirect) {\n      out = redirectDo;\n    } else if (savedToken !== null) {\n      out = removeAuthCard;\n    } else {\n      out = authCard;\n    }\n\n    return (out);\n  }\n}\n\nexport default Auth;","import React from 'react';\nimport { Row, Col, Table, TableBody, TableHead, Input } from 'mdbreact';\nimport { Redirect } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport * as storage from '../storage';\n\nclass Repos extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      loaded: false,\n      redirect: false,\n      repos: [],\n    };\n  }\n\n  componentDidMount () {\n    let storedRepos = JSON.parse(storage.local.getItem('githubRepos'));\n    if (storedRepos === null) {\n      storedRepos = [];\n    }\n\n    if (this.props.octokit && this.props.octokit.auth) {\n      this.props.octokit.repos.getAll({sort: 'updated', per_page: 100})\n        .then(\n          (result) => {\n            let repos = [];\n            result.data.forEach((repo) => {\n              let selected = false;\n\n              let r = storedRepos.find(r => r.id === repo.id);\n              if (r) {\n                selected = r.selected;\n              }\n\n              repos.push({\n                id: repo.id,\n                owner: repo.owner.login,\n                name: repo.name,\n                selected: selected\n              });\n            });\n\n            this.setState({\n              loaded: true,\n              repos: repos\n            });\n          },\n          (error) => {\n            this.setState({\n              loaded: true,\n              error: error\n            });\n          }\n        );\n    } else {\n      this.setState({\n        redirect: true,\n      });\n    }\n  }\n\n  addRepo (e) {\n    let checked = e.target.checked;\n    let repos = this.state.repos;\n\n    let repo = repos.find(repo => repo.id === parseInt(e.target.value, 10));\n    let index = repos.indexOf(repo);\n    repos.fill(repo.selected = checked, index, index++);\n\n    storage.local.setItem('githubRepos', JSON.stringify(repos.filter(repo => repo.selected)));\n\n    this.setState({\n      repos: repos\n    });\n  }\n\n  render () {\n    const {redirect, repos, loaded} = this.state;\n\n    let redirectDo = <Redirect to=\"/\"/>;\n\n    let tableRows;\n    if (loaded) {\n      tableRows = repos.map((repo) => {\n          return <tr key={repo.id}>\n            <td>\n              <Input onChange={this.addRepo.bind(this)} type=\"checkbox\" value={repo.id} checked={repo.selected}/>\n            </td>\n            <td>{repo.owner}</td>\n            <td>{repo.name}</td>\n          </tr>;\n        }\n      );\n    } else {\n      tableRows = <tr>\n        <td>\n          <FontAwesomeIcon className=\"fa-pulse\" icon={faSpinner}/>\n        </td>\n      </tr>;\n    }\n\n    let out;\n\n    if (redirect) {\n      out = redirectDo;\n    } else {\n      out = <Row>\n        <Col>\n          <Table>\n            <TableHead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>Owner</th>\n                <th>Repo Name</th>\n              </tr>\n            </TableHead>\n            <TableBody>\n              {tableRows}\n            </TableBody>\n          </Table>\n        </Col>\n      </Row>;\n    }\n\n    return (out);\n  }\n}\n\nexport default Repos;","import React, { Component } from 'react';\nimport AppNavbar from './AppNavbar';\nimport GithubRepoList from './Github/GithubRepoList';\nimport Octokit from './Octokit';\nimport Auth from './Github/Auth';\nimport Repos from './Github/Repos';\n\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {octokit: null};\n  }\n\n  authCallback = () => {\n    this.setState({octokit: Octokit.get()});\n  };\n\n  componentDidMount () {\n    this.authCallback();\n  }\n\n  render () {\n    return (\n      <div>\n        <AppNavbar/>\n        <main>\n          <div className=\"container-fluid mt-5 pt-5\">\n            <Switch>\n              <Route path='/repos' render={(props) => <Repos {...props} octokit={this.state.octokit}/>}/>\n              <Route path='/auth' render={(props) => <Auth {...props} authCallback={this.authCallback}/>}/>\n              <Route path='/' render={(props) => <GithubRepoList {...props} octokit={this.state.octokit}/>}/>\n            </Switch>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n), document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}